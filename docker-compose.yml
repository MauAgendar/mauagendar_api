version: '3'
services:
  db:
    image: postgres:latest
    ports:
      - ${PG_PORT}:${PG_PORT}
    environment:
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    logging:
          options:
            max-size: 10m
            max-file: "3"
        
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    env_file:
      - ./.env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PG_HOST=${PG_HOST}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
      - PG_PORT=${PG_PORT}=value
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:

volumes:
  pgdata: